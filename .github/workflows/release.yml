name: Build and Release Windows

on:
  push:
    branches:
      - 'master'
  workflow_dispatch:

jobs:
  build-release:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
      - name: Restore NuGet packages
        run: nuget restore ToNRoundCounter.sln -ConfigFile NuGet.config
      - name: Build
        run: msbuild ToNRoundCounter.sln /p:Configuration=Release /p:Platform=x64
      - name: Include updater
        run: Copy-Item -Path .\Updater\bin\Release\net48\* -Destination .\bin\x64\Release\ -Recurse -Force
      - name: Include shared assets
        run: |
          Expand-Archive -Path share_assets.zip -DestinationPath share_assets
          Copy-Item -Path share_assets/share_assets/* -Destination .\bin\x64\Release\ -Recurse -Force
      - name: Collect modules
        run: |
          $modulePackagePath = Join-Path $PWD "ModulesPackage"
          if (Test-Path $modulePackagePath) {
            Remove-Item -Path $modulePackagePath -Recurse -Force
          }
          New-Item -ItemType Directory -Path $modulePackagePath | Out-Null
          Get-ChildItem -Path .\Modules -Filter *.csproj -Recurse | ForEach-Object {
            $projectDirectory = $_.DirectoryName
            $moduleName = $_.BaseName

            $moduleDll = Get-ChildItem -Path (Join-Path $projectDirectory 'bin') -Recurse -Filter '*Module.dll' |
              Sort-Object LastWriteTime -Descending |
              Select-Object -First 1

            if ($moduleDll) {
              $moduleDirectory = Join-Path $modulePackagePath $moduleName
              if (Test-Path $moduleDirectory) {
                Remove-Item -Path $moduleDirectory -Recurse -Force
              }
              New-Item -ItemType Directory -Path $moduleDirectory | Out-Null
              Copy-Item -Path $moduleDll.FullName -Destination (Join-Path $moduleDirectory $moduleDll.Name) -Force
            }
          }
      - name: Package
        run: Compress-Archive -Path .\bin\x64\Release\* -DestinationPath ToNRoundCounter_latest.zip
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ToNRoundCounter-build
          path: |
            ToNRoundCounter_latest.zip
            ModulesPackage/**/*
      - name: Extract version
        if: github.event_name == 'push' && contains(github.event.head_commit.message, 'release')
        id: get_version
        shell: bash
        run: |
          MESSAGE="${{ github.event.head_commit.message }}"
          VERSION=$(echo "$MESSAGE" | sed -n 's/.*release[[:space:]]\+//p' | head -n 1)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Create Release
        if: github.event_name == 'push' && contains(github.event.head_commit.message, 'release')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: ${{ steps.get_version.outputs.version }}
          files: |
            ToNRoundCounter_latest.zip
            ModulesPackage/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
